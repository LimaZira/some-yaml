type: "orchestration"
version: "1.0"
pipeline:
  components:
    Start:
      type: "start"
      transitions:
        unconditional:
        - "Recreate stg_batteryelectric_wide"
      parameters:
        componentName: "Start"
    Recreate stg_batteryelectric_wide:
      type: "create-table"
      transitions:
        success:
        - "S3 Load"
      parameters:
        componentName: "Recreate stg_batteryelectric_wide"
        createReplace: "Replace"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        newTableName: "stg_batteryelectric_wide"
        tableType: "Permanent"
        columns:
        - - "Make"
          - "VARCHAR"
          - "40"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "Model"
          - "VARCHAR"
          - "256"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2022 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2022 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2022 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q4"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q3"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q2"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q1"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "No"
          - "No"
          - ""
        defaultDdlCollation:
        primaryKeys:
        clusteringKeys:
        dataRetentionTimeInDays:
        comment:
    Prepare column list:
      type: "query-to-scalar"
      transitions:
        success:
        - "Print Variables"
      parameters:
        componentName: "Prepare column list"
        mode: "Advanced"
        query: "SELECT ARRAY_TO_STRING(ARRAY_AGG('\"' || COLUMN_NAME || '\"') WITHIN\
          \ GROUP (ORDER BY ORDINAL_POSITION ASC), ',') AS QCOLS\r\nFROM INFORMATION_SCHEMA.COLUMNS\r\
          \nWHERE TABLE_NAME = 'stg_batteryelectric_wide'\r\nAND COLUMN_NAME LIKE\
          \ '%Q%'"
        scalarVariableMapping:
        - - "prvt_cols_dq"
          - "QCOLS"
    Print Variables:
      type: "print-variables"
      transitions:
        success:
        - "Run example transpose transformation 1 wide to narrow"
      parameters:
        componentName: "Print Variables"
        variablesToPrint:
        - - "prvt_cols_dq"
        prefixText:
        includeVariableName: "No"
    Run example transpose transformation 1 wide to narrow:
      type: "run-transformation"
      parameters:
        componentName: "Run example transpose transformation 1 wide to narrow"
        transformationJob: "Matillion Exchange/Snowflake/Transposing/example transpose\
          \ transformation 1 wide to narrow"
        setScalarVariables:
        - - "jv_col_list"
          - "${prvt_cols_dq}"
    S3 Load:
      type: "s3-load"
      transitions:
        success:
        - "Assert Table"
      parameters:
        componentName: "S3 Load"
        stage: "[Custom]"
        authentication: "Credentials"
        s3ObjectPrefix: "s3://devrel.matillion.com"
        pattern: "data/structured/EV/BatteryElectric.tsv"
        encryption: "None"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "stg_batteryelectric_wide"
        loadColumns:
        format: "[Custom]"
        fileType: "CSV"
        compression: "AUTO"
        recordDelimiter:
        fieldDelimiter: "\\t"
        skipHeader: "1"
        skipBlankLines: "False"
        dateFormat:
        timeFormat:
        timestampFormat:
        escape:
        escapeUnenclosedField:
        trimSpace: "False"
        fieldOptionallyEnclosed:
        nullIf:
        errorOnColumnCountMismatch: "False"
        emptyFieldAsNull: "True"
        replaceInvalidCharacters: "False"
        encodingType:
        onError: "Abort Statement"
        sizeLimitB:
        purgeFiles: "False"
        truncateColumns: "False"
        forceLoad: "False"
    Assert Table:
      type: "assert-table"
      transitions:
        success:
        - "Prepare column list"
      parameters:
        componentName: "Assert Table"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        tableName: "stg_batteryelectric_wide"
        exists: "Yes"
        tableMetadata:
        rowCountComparisonType: "Equal To"
        rowCountValue: "116"
  variables:
    prvt_cols_dq:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PRIVATE"
      defaultValue: ""
design:
  components:
    Start:
      position:
        x: -270
        "y": 0
      tempMetlId: 1
    Recreate stg_batteryelectric_wide:
      position:
        x: -100
        "y": 0
      tempMetlId: 2
    Prepare column list:
      position:
        x: 290
        "y": 0
      tempMetlId: 3
    Print Variables:
      position:
        x: 440
        "y": 0
      tempMetlId: 4
    Run example transpose transformation 1 wide to narrow:
      position:
        x: 620
        "y": 0
      tempMetlId: 5
    S3 Load:
      position:
        x: 20
        "y": 0
      tempMetlId: 6
    Assert Table:
      position:
        x: 130
        "y": 0
      tempMetlId: 7
  notes:
    "1":
      position:
        x: 540
        "y": -80
      size:
        height: 208
        width: 210
      theme: "white"
      content: "Run the wide-to-narrow transpose"
    "2":
      position:
        x: -160
        "y": -80
      size:
        height: 208
        width: 380
      theme: "white"
      content: "Colocate and check the source data"
