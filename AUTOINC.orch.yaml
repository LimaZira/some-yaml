type: "orchestration"
version: "1.0"
pipeline:
  components:
    Start:
      type: "start"
      transitions:
        unconditional:
        - "Python Pushdown"
      parameters:
        componentName: "Start"
    Python Pushdown:
      type: "python-pushdown"
      parameters:
        componentName: "Python Pushdown"
        externalAccessIntegrations:
        packages:
        pythonScript: |
          ###
          # Variables are directly accessible:
          #   print (myvar)
          # Updating a variable:
          #   context.updateVariable('myvar', 'new-value')
          # Updating a grid variable:
          #   context.updateGridVariable('mygridvar',[['list','of'],['lists','!']])
          ###)
        scriptTimeout: "360"
design:
  components:
    Start:
      position:
        x: -50
        "y": 30
      tempMetlId: 1
    Python Pushdown:
      position:
        x: 130
        "y": 30
      tempMetlId: 2
  notes:
    "1":
      position:
        x: 50
        "y": -160
      size:
        height: 380
        width: 440
      theme: "white"
      content: "The **Python Pushdown** component allows Python code to be executed\
        \ directly against data sources during a transformation. This can improve\
        \ performance over standard transformations by pushing computation down to\
        \ the data source. The Python script has access to context variables and can\
        \ update them. It can also update grid variables which are lists of lists\
        \ used to pass tabular data between components."
